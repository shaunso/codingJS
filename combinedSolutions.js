{"delDel":"true","in3050-code":"function in3050(a, b){\n  if (a >= 30 & b >= 30 & a <= 40 & b <=40) {\n    return true;\n  } else if (a >= 40 & b >= 40 & a <= 50 & b <=50) {\n    return true;\n  } else {\n    return false;\n  }\n}","intMax":"true","missingChar-code":"function missingChar(str, n){\n  let text = \"\";\n  let i;\n  \n  for (i in str) {\n   if (i != n){\n      text += str[i];;\n   } else {\n     continue;\n   } \n  }\n\n  return text\n}","nearHundred":"true","front22":"true","notString-code":"function notString(str){\n  const checkStr = str.startsWith(\"not\");\n  \n  if (checkStr === false) {\n    const updatedStr = `not ${str}`;\n    return updatedStr;\n  } else {\n    return str;\n  }\n}","loneTeen":"true","icyHot":"true","parrotTrouble-code":"function parrotTrouble(talking, hour){\n  if (talking === true & (hour < 7 || hour > 20)) {\n    return true;\n  } else {\n    return false\n  }\n}","sleepIn-code":"function sleepIn(weekday, vacation){\n  if (weekday == true & vacation == true){\n    return true\n  } else if (weekday == true & vacation == false){\n    return false\n  } else if (weekday == false & vacation == false){\n    return true\n  } else (weekday == false & vacation == true){\n    return true\n  }\n}","posNeg-code":"function posNeg(a, b, negative){\n  if ((a < 0 & b > 0 & negative === false) {\n    return true\n  } else if (a > 0 & b < 0 & negative === false) {\n    return true;\n  } else if (a < 0 & b < 0 & negative === true) {\n    return true;\n  } else {\n    return false\n  }\n}","max1020-code":"function max1020(a, b){\n  if (a > 20 & b == 10){\n    return b;\n  }else if ((a,b >= 10 & a,b <= 20)) {\n    const maxNum = Math.max(a, b);\n    return maxNum;\n  } else if ((a >= 10 & a <= 20) & (b>=20 | b<=10)){\n    return a;\n  } \n  else {\n    return 0;\n  }\n}","parrotTrouble":"true","stringTimes-code":"function stringTimes(str, n){\n  let i = 0;\n  let updt = \"\";\n  \n  for (i; i < n; i++) {\n    updt = updt + str;\n  }\n  \n  return updt;\n}","max1020":"true","startHi-code":"function startHi(str){\n  const check = str.indexOf(\"hi\");\n  if (check === 0){\n     return true;\n  } else {\n    return false;\n  }\n}","nearHundred-code":"function nearHundred(n){\n  if (0 <= Math.abs(100 - n) & Math.abs(100 - n) <= 10) {\n    return true\n  } else if (0 <= Math.abs(200 - n) & Math.abs(200 - n) <= 10) {\n    return true\n  } else {\n    return false\n  }\n}","front3-code":"function front3(str){\n  const stringToArrayConversion = Array.from(str);\n  \n  const extractFirstThreeItems = stringToArrayConversion.slice(0,3);\n  \n  const arrayToStringConversion = extractFirstThreeItems.join(\"\");\n    \n  const stringRepeat = arrayToStringConversion+arrayToStringConversion+arrayToStringConversion;\n    \n  return stringRepeat;\n}","startOz":"true","close10-code":"function close10(a, b){\n  const aCheck = Math.abs(10 - a);\n  const bCheck = Math.abs(10 - b);\n  \n  if (aCheck > bCheck) {\n    return b;\n  } else if (aCheck < bCheck){\n    return a;\n  } else if (aCheck == bCheck){\n    const d = 0;\n    return d;\n  }\n}","frontBack":"true","endUp-code":"function endUp(str){\n  const unmutated = str.slice(0, -3);\n  const mutated = str.slice(-3);\n  \n  const upperCase = mutated.toUpperCase();\n  \n  const updatedString = unmutated+upperCase;\n  \n  return updatedString;\n}","everyNth":"true","diff21-code":"function diff21(n){\n  if (n > 21) {\n    return Math.abs(n - 21) * 2;\n  } else {\n    return Math.abs(n - 21);\n  }\n}","notString":"true","sumDouble":"true","stringTimes":"true","intMax-code":"function intMax(a, b, c){\n  const max = Math.max(a, b, c);\n  return max;\n}","makes10":"true","missingChar":"true","icyHot-code":"function icyHot(temp1, temp2){\n  if (temp1 < 0 & temp2 > 100 || temp1 > 100 & temp2 < 0){\n    return true;\n  } else {\n    return false;\n  }\n}","delDel-code":"function delDel(str){\n  const check = str.indexOf(\"del\");\n  const updatedStr\n  \n  if (check == 1) {\n    updatedStr = str.replace(\"del\", \"\")\n    return updatedStr;\n  } else {\n    return str;\n  }\n}","hasTeen-code":"function hasTeen(a, b, c){\n  const check = [13,14,15,16,17,18,19]\n \n  if (check.includes(a) || check.includes(b) || check.includes(c)) {\n    return true;\n  } else {\n    return false;\n  }\n}","monkeyTrouble":"true","endUp":"true","countXX-code":"function countXX(str){\n  let searchStr = \"xx\";\n  let count = 0;\n  \n  for (let i = 0, j = 1; i < str.length; i++, j++) {\n     if (str[i] === \"x\" && str[j] === \"x\" ) {\n       count++;\n     } else {\n       continue\n     }\n  }\n  \n  return count;\n  \n}","stringE":"true","front22-code":"function front22(str){\n  const stringToArrayConversion = Array.from(str);\n  \n  const selectFirstTwoCharacters = stringToArrayConversion.slice(0,2);\n  \n  const toString = selectFirstTwoCharacters.join(\"\");\n  \n  stringToArrayConversion.push(toString);\n  stringToArrayConversion.unshift(toString);\n  \n  const arrayToStringConversion = stringToArrayConversion.join(\"\");\n  \n  return arrayToStringConversion;\n}","backAround-code":"function backAround(str){\n  const stringToArrayConversion = Array.from(str);\n  \n  const selectLastCharacter = stringToArrayConversion.at(-1);\n  \n  stringToArrayConversion.push(selectLastCharacter);\n  stringToArrayConversion.unshift(selectLastCharacter);\n  \n  const arrayToStringConversion = stringToArrayConversion.join(\"\");\n  \n  return arrayToStringConversion;\n}","mapBully-code":"function mapBully(someMap){\n  \n}","startOz-code":"function startOz(str){\n  if (str.length > 0) {\n    if (str.startsWith(\"o\", 0)) {\n       if (str.at(1) === \"z\"){\n        const oz = \"oz\";\n        return oz;        \n       } else {\n        const o = \"o\";\n        return o;\n       }\n    } else if (str.at(1) == \"z\") {\n        const z = \"z\";\n        return z;\n    } else {\n    const b = \"\";\n    return b\n    }\n    \n  } else {\n    const a = \"\";\n    return a}\n}","mixStart-code":"function mixStart(str){\n  if (str.indexOf(\"ix\") == 1){\n    return true\n  } else {\n    return false\n  }\n}","sumDouble-code":"function sumDouble(a, b){\n  if (a === b) {\n    return (a + b) * 2;\n  }\n  else {\n    return a + b;\n  }\n}","hasTeen":"true","lastDigit":"true","makes10-code":"function makes10(a, b){\n  if (a === 10 || b === 10 || a + b === 10) {\n      return true\n  } else {\n    return false\n  }\n}","in3050":"true","mixStart":"true","frontTimes-code":"function frontTimes(str, n){\n\n    const stringSliced = str.slice(0,3);\n    let text = \"\";\n    let i = 0;\n    for (i; i < n; i++) {\n      text += stringSliced;\n    }\n      return text;\n   \n  }\n}","loneTeen-code":"function loneTeen(a, b){\n    const check = [13,14,15,16,17,18,19]\n \n  if (check.includes(a) & !check.includes(b) || check.includes(b) & !check.includes(a)) {\n    return true;\n  } else {\n    return false;\n  }\n}","startHi":"true","sleepIn":"true","diff21":"true","posNeg":"true","frontTimes":"true","countXX":"true","monkeyTrouble-code":"function monkeyTrouble(aSmile, bSmile){\n  if (aSmile == true & bSmile == true){\n    return true\n  } else if (aSmile == true & bSmile == false) {\n    return false\n  } else if (aSmile == false & bSmile == true) {\n    return false\n  } else return true\n}","stringE-code":"function stringE(str){\n  let counter = 0;\n  \n  for (i in str) {\n    if (str[i] == \"e\") {\n      counter++;\n    } else {\n      continue\n    }\n  }\n  \n  if (counter >= 1 & counter <= 3) {\n    return true;\n  } else {\n    return false\n  }\n}","close10":"true","or35-code":"function or35(n){\n  if ( n % 3 === 0 || n % 5 === 0){\n     return true;\n  }  \n  \n  else {\n    return false;\n  }\n    \n}","front3":"true","getSandwich-code":"function getSandwich(str){\n  \n}","lastDigit-code":"function lastDigit(a, b, c){\n  if (a % 10 === b % 10) {\n    return true;\n  } else {\n    return false;\n  }\n}","backAround":"true","everyNth-code":"function everyNth(str, n){\n  let updatedStr = \"\";\n  \n  for (let i = 0; i <= str.length - 1; i+=n) {\n    updatedStr = updatedStr + str.at(i);\n  }\n  \n  return updatedStr;\n}","frontBack-code":"function frontBack(str){\n  \n  if (str.length > 1) {\n  firstCharacter = str.slice(0,1);\n  middleCharacters = str.slice(1,-1);\n  lastCharacter = str.slice(-1);\n  \n  rearrangedWord = lastCharacter + middleCharacters + firstCharacter;\n  \n  return rearrangedWord;\n  } else {\n  return str;\n  }  \n}","or35":"true"}